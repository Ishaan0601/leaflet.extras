{"version":3,"file":"lfx-styleeditor-prod.js","mappings":"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AAKkN,cAAc,IAAK1G,EAAYI,UAAWD,EAC7E,EAEA8F,sBAAuB,SAAUjG,GAC/B,OAAOxG,KAAK+M,cAAcvG,EAAYgF,SAAUhF,EAAYI,UAAWJ,EAAYG,KACrF,EAEAoG,cAAe,SAAU1D,EAAMjH,EAAOuE,GAQpC,MADU,+CANV0C,EAAOrJ,KAAKiM,WAAW5C,GAAM,IAOhB,KALXjH,EADyB,IAAvBA,EAAMrB,QAAQ,KACRqB,EAAMpB,QAAQ,IAAK,IAEnBhB,KAAKF,QAAQM,mBAAmBiE,KAAK1D,SAASyB,GAAO,IAGpC,MAC7B,EAEAtC,QAAS,CACP2C,QAAS,CACP,iBACA,qBACA,iBACA,iBACA,kBACA,kBACA,qBACA,mBACA,kBACA,kBACA,mBACA,kBACA,iBACA,uBACA,iBACA,iBACA,qBACA,eACA,oBACA,eACA,mBACA,oBACA,qBACA,gBACA,mBACA,gBACA,kBACA,iBACA,iBACA,iBACA,iBACA,yBACA,qBACA,mBACA,kBACA,wBACA,mBACA,oBACA,qBACA,iBACA,iBACA,uBACA,uBACA,wBACA,sBACA,mBACA,oBACA,gBACA,iBACA,iBACA,qBACA,kBACA,mBACA,iBACA,iBACA,mBACA,wBACA,uBACA,uBACA,yBACA,wBACA,0BACA,iBACA,wBACA,yBACA,2BACA,oBACA,uBACA,mBACA,iBACA,iBACA,kBACA,kBACA,iBACA,0BACA,sBACA,uBACA,wBACA,oBACA,0BACA,sBACA,uBACA,0BACA,sBACA,uBACA,uBACA,wBACA,qBACA,uBACA,sBACA,wBACA,yBACA,6BACA,iBACA,iBACA,iBACA,qBACA,sBACA,yBACA,kBACA,qBACA,mBACA,oBACA,mBACA,uBACA,yBACA,oBACA,0BACA,qBACA,iBACA,wBACA,sBACA,wBACA,uBACA,sBACA,oBACA,sBACA,+BACA,8BACA,4BACA,8BACA,kBACA,mBACA,kBACA,mBACA,sBACA,uBACA,sBACA,sBACA,wBACA,iBACA,kBACA,oBACA,oBCnMN3D,EAAEuO,UAAYvO,EAAEa,MAAMC,OAAO,CAC3BC,WAAY,S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","sources":["webpack://leaflet.extras/webpack/bootstrap","webpack://leaflet.extras/webpack/runtime/make namespace object","webpack://leaflet.extras/external var \"L\"","webpack://leaflet.extras/./node_modules/leaflet-styleeditor/src/javascript/Leaflet.StyleEditor.js","webpack://leaflet.extras/./node_modules/leaflet-styleeditor/src/javascript/Util.js","webpack://leaflet.extras/./node_modules/leaflet-styleeditor/src/javascript/FormElements/FormElement.js","webpack://leaflet.extras/./node_modules/leaflet-styleeditor/src/javascript/FormElements/ColorElement.js","webpack://leaflet.extras/./node_modules/leaflet-styleeditor/src/javascript/FormElements/DashElement.js","webpack://leaflet.extras/./node_modules/leaflet-styleeditor/src/javascript/FormElements/IconElement.js","webpack://leaflet.extras/./node_modules/leaflet-styleeditor/src/javascript/FormElements/OpacityElement.js","webpack://leaflet.extras/./node_modules/leaflet-styleeditor/src/javascript/FormElements/PopupContentElement.js","webpack://leaflet.extras/./node_modules/leaflet-styleeditor/src/javascript/FormElements/SizeElement.js","webpack://leaflet.extras/./node_modules/leaflet-styleeditor/src/javascript/FormElements/WeightElement.js","webpack://leaflet.extras/./node_modules/leaflet-styleeditor/src/javascript/Form/Form.js","webpack://leaflet.extras/./node_modules/leaflet-styleeditor/src/javascript/Form/GeometryForm.js","webpack://leaflet.extras/./node_modules/leaflet-styleeditor/src/javascript/Form/MarkerForm.js","webpack://leaflet.extras/./node_modules/leaflet-styleeditor/src/javascript/Marker/Marker.js","webpack://leaflet.extras/./node_modules/leaflet-styleeditor/src/javascript/Marker/DefaultMarker.js","webpack://leaflet.extras/./node_modules/leaflet-styleeditor/src/javascript/Marker/GlyphiconMarker.js","webpack://leaflet.extras/./node_modules/leaflet-styleeditor/src/javascript/StyleForm.js","webpack://leaflet.extras/./node_modules/leaflet-styleeditor/src/javascript/Control.js"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = L;","import 'leaflet'\n\nimport setupColorElement from './FormElements/ColorElement'\nimport setupFormElement from './FormElements/FormElement'\nimport setupDashElement from './FormElements/DashElement'\nimport setupIconElement from './FormElements/IconElement'\nimport setupOpacityElement from './FormElements/OpacityElement'\nimport setupPopupContentElement from './FormElements/PopupContentElement'\nimport setupSizeElement from './FormElements/SizeElement'\nimport setupWeightElement from './FormElements/WeightElement'\n\nimport setupForm from './Form/Form'\nimport setupGeometryForm from './Form/GeometryForm'\nimport setupMarkerForm from './Form/MarkerForm'\n\nimport setupMarker from './Marker/Marker'\nimport setupDefaultMarker from './Marker/DefaultMarker'\nimport setupGlyphiconMarker from './Marker/GlyphiconMarker'\n\nimport setupStyleForm from './StyleForm'\nimport setupControl from './Control'\n\nimport setupUtil from './Util'\n\nrequire('../css/Leaflet.StyleEditor.css')\n\nL.StyleEditor = {\n  marker: {},\n  forms: {},\n  formElements: {}\n}\n\nL.Marker.include({\n  styleEditor: {\n    type: 'Marker'\n  }\n})\n\nL.Polygon.include({\n  styleEditor: {\n    type: 'Polygon'\n  }\n})\n\nL.Polyline.include({\n  styleEditor: {\n    type: 'Polyline'\n  }\n})\n\nL.Rectangle.include({\n  styleEditor: {\n    type: 'Rectangle'\n  }\n})\n\nsetupUtil()\n\nsetupFormElement()\nsetupColorElement()\nsetupDashElement()\nsetupIconElement()\nsetupOpacityElement()\nsetupPopupContentElement()\nsetupSizeElement()\nsetupWeightElement()\n\nsetupForm()\nsetupGeometryForm()\nsetupMarkerForm()\n\nsetupMarker()\nsetupDefaultMarker()\nsetupGlyphiconMarker()\n\nsetupStyleForm()\nsetupControl()\n\nexport default L\n","import 'leaflet'\n\n/**\n * Helper functions used throuhgout the project\n */\nexport default function setupUtil () {\n  L.StyleEditor.Util = L.Class.extend({\n\n    initialize: function (options) {\n      if (options) {\n        L.setOptions(this, options)\n      }\n    },\n\n    fireEvent: function (eventName, element) {\n      this.options.styleEditorOptions.map.fireEvent(\n        this.options.styleEditorOptions.styleEditorEventPrefix + eventName,\n        element\n      )\n    },\n\n    /** fire an event if Leaflet.StyleEditor changed something */\n    fireChangeEvent: function (element) {\n      this.fireEvent('changed', element)\n    },\n\n    /** hide the given element */\n    hideElement: function (element) {\n      if (element) {\n        L.DomUtil.addClass(element, 'leaflet-styleeditor-hidden')\n      }\n    },\n\n    /** convert rgb to hex of a color\n     * @param {string} rgb - rgb representation of the color\n     * @param {boolean} noHash - define if return value should not include hash\n     */\n    rgbToHex: function (rgb, noHash) {\n      if (!rgb) {\n        rgb = this.options.styleEditorOptions.defaultColor\n        if (rgb.indexOf('#') !== 0) {\n          rgb = '#' + rgb\n        }\n      }\n\n      if (rgb.indexOf('#') === 0) {\n        if (noHash) {\n          rgb.replace('#', '')\n        }\n        return rgb\n      }\n\n      if (rgb.indexOf('(') < 0) {\n        return '#' + rgb\n      }\n\n      let rgbArray = rgb.substring(4).replace(')', '').split(',')\n      let withoutHash = this._componentToHex(parseInt(rgbArray[0], 10)) + this._componentToHex(parseInt(rgbArray[1], 10)) +\n        this._componentToHex(parseInt(rgbArray[2], 10))\n\n      if (noHash) {\n        return withoutHash\n      }\n      return '#' + withoutHash\n    },\n\n    /** get element selected to be styled */\n    getCurrentElement: function () {\n      if (!this.options.styleEditorOptions.currentElement) {\n        return null\n      }\n      if (this.options.styleEditorOptions.currentElement.target !== undefined) {\n        return this.options.styleEditorOptions.currentElement.target\n      }\n      return this.options.styleEditorOptions.currentElement\n    },\n\n    /** set which element is selected to be styled */\n    setCurrentElement: function (currentElement) {\n      this.options.styleEditorOptions.currentElement.target = currentElement\n    },\n\n    /** does current element have the fill option */\n    fillCurrentElement: function () {\n      return this.getCurrentElement().options.fill\n    },\n\n    /** get current style of current element */\n    getStyle: function (option) {\n      let currentElement = this.getCurrentElement()\n      let style = currentElement.options[option]\n      if (style) {\n        return style\n      }\n      return null\n    },\n\n    /** set new style to current element */\n    setStyle: function (option, value) {\n      let currentElement = this.getCurrentElement()\n      if (currentElement instanceof L.Marker) {\n        this.options.styleEditorOptions.markerType.setStyle(option, value)\n      } else {\n        let newStyle = {}\n        newStyle[option] = value\n        currentElement.setStyle(newStyle)\n      }\n\n      this.fireChangeEvent(currentElement)\n    },\n\n    /** show hidden element */\n    showElement: function (element) {\n      if (element) {\n        L.DomUtil.removeClass(element, 'leaflet-styleeditor-hidden')\n      }\n    },\n\n    /** helper function to convert color to hex */\n    _componentToHex: function (color) {\n      let hex = color.toString(16)\n      return hex.length === 1 ? '0' + hex : hex\n    },\n\n    /** get the markers for a specific color **/\n    getMarkersForColor: function (color) {\n      color = this.rgbToHex(color)\n\n      let markers = this.options.styleEditorOptions.markerType.options.markers\n      let controlMarkers = this.options.styleEditorOptions.markers\n\n      if (!Array.isArray(markers)) {\n        // if color is specified return specific markers\n        if (Object.keys(markers).includes(color)) {\n          markers = markers[color]\n        } else {\n          markers = markers['default']\n        }\n      }\n\n      if (controlMarkers !== null) {\n        if (!Array.isArray(controlMarkers)) {\n          let keys = Object.keys(controlMarkers)\n          if (keys.includes(color)) {\n            controlMarkers = controlMarkers[color]\n          } else if (keys.includes('default')) {\n            controlMarkers = controlMarkers['default']\n          } else {\n            controlMarkers = markers\n          }\n        }\n\n        return markers.filter((n) => controlMarkers.includes(n))\n      }\n      return markers\n    },\n\n    /** get default marker for specific color **/\n    getDefaultMarkerForColor: function (color) {\n      color = this.rgbToHex(color)\n\n      let markers = this.getMarkersForColor(color)\n\n      let defMarkers = []\n\n      let defaultMarker = this.options.styleEditorOptions.defaultMarkerIcon\n      if (defaultMarker !== null) {\n        if (typeof defaultMarker === 'string') {\n          defMarkers.push(defaultMarker)\n        }\n        if (Object.keys(defaultMarker).includes(color)) {\n          defMarkers.push(defaultMarker[color])\n        }\n      }\n\n      defaultMarker = this.options.styleEditorOptions.markerType.options.defaultMarkerIcon\n      if (defaultMarker !== undefined) {\n        if (typeof defaultMarker === 'string') {\n          defMarkers.push(defaultMarker)\n        }\n        if (Object.keys(defaultMarker).includes(color)) {\n          defMarkers.push(defaultMarker[color])\n        }\n      }\n\n      defMarkers.filter((n) => markers.includes(n))\n      if (defMarkers.length > 0) {\n        return defMarkers[0]\n      }\n\n      return markers[0]\n    }\n  })\n}\n","import 'leaflet'\n\n/** FormElements are part of a Form for a specific styling option (i.e. color) */\nexport default function setupFormElement () {\n  L.StyleEditor.formElements.FormElement = L.Class.extend({\n\n    /** set options and title */\n    initialize: function (options) {\n      if (options) {\n        L.setOptions(this, options)\n      }\n\n      // if no title is given use styling option\n      if (!this.options.title && !!this.options.styleOption) {\n        this.options.title = this.options.styleOption.charAt(0).toUpperCase() + this.options.styleOption.slice(1)\n      }\n    },\n\n    /** create uiElement and content */\n    create: function (parentUiElement) {\n      this.options.uiElement =\n        L.DomUtil.create('div', 'leaflet-styleeditor-uiElement', parentUiElement)\n      this.createTitle()\n      this.createContent()\n    },\n\n    /** create title */\n    createTitle: function () {\n      let title = L.DomUtil.create('label', 'leaflet-styleeditor-label', this.options.uiElement)\n      title.innerHTML = this.options.title + ':'\n    },\n\n    /** create content (where the actual modification takes place) */\n    createContent: function () {\n    },\n\n    /** style the FormElement and show it */\n    show: function () {\n      this.style()\n      this.showForm()\n    },\n\n    /** show the FormElement */\n    showForm: function () {\n      this.options.styleEditorOptions.util.showElement(this.options.uiElement)\n    },\n\n    /** hide the FormElement */\n    hide: function () {\n      this.options.styleEditorOptions.util.hideElement(this.options.uiElement)\n    },\n\n    /** style the FormElement */\n    style: function () {\n    },\n\n    /** what to do when lost focus */\n    lostFocus: function () {\n    },\n\n    /** set style - used when the FormElement wants to change the styling option */\n    setStyle: function (value) {\n      let currentElement = this.options.styleEditorOptions.util.getCurrentElement()\n      // check whether a layer is part of a layerGroup\n      let layers = [currentElement]\n      if (currentElement instanceof L.LayerGroup) {\n        layers = Object.values(currentElement._layers)\n      }\n\n      // update layer (or all layers of a layerGroup)\n      for (let i = 0; i < layers.length; i++) {\n        let layer = layers[i]\n        if (layer instanceof L.Marker) {\n          this.options.styleEditorOptions.markerType.setStyle(this.options.styleOption, value)\n        } else {\n          let newStyle = {}\n          newStyle[this.options.styleOption] = value\n          layer.setStyle(newStyle)\n          layer.options[this.options.styleOption] = value\n        }\n\n        // fire event for changed layer\n        this.options.styleEditorOptions.util.fireChangeEvent(layer)\n      }\n\n      // notify form styling value has changed\n      this.options.parentForm.style()\n    }\n\n  })\n}\n","import 'leaflet'\n\n/**\n *  FormElement used to style the color\n */\nexport default function setupColorElement () {\n  L.StyleEditor.formElements.ColorElement = L.StyleEditor.formElements.FormElement.extend({\n\n    createContent: function () {\n      this.options.colorPickerDiv = L.DomUtil.create('div', 'leaflet-styleeditor-colorpicker',\n        this.options.uiElement)\n      this._getColorRamp().forEach(this._setSelectCallback, this)\n    },\n\n    /** create of get already created colorRamp */\n    _getColorRamp: function () {\n      if (!this.options.colorRamp) {\n        // if markers have own colorRamp use it\n        if (this.options.parentForm instanceof L.StyleEditor.forms.MarkerForm && !!this.options.styleEditorOptions.markerType.options.colorRamp) {\n          this.options.colorRamp = this.options.styleEditorOptions.markerType.options.colorRamp\n          // else use the default\n        } else {\n          this.options.colorRamp = this.options.styleEditorOptions.colorRamp\n        }\n      }\n      return this.options.colorRamp\n    },\n\n    /** define what to do when color is changed */\n    _setSelectCallback: function (color) {\n      let elem = L.DomUtil.create('div', 'leaflet-styleeditor-color', this.options.colorPickerDiv)\n      elem.style.backgroundColor = color\n      L.DomEvent.addListener(elem, 'click', this._selectColor, this)\n    },\n\n    /** set style for chosen color */\n    _selectColor: function (e) {\n      e.stopPropagation()\n      this.setStyle(\n        this.options.styleEditorOptions.util.rgbToHex(\n          e.target.style.backgroundColor\n        )\n      )\n\n      // marker styling needs additional function calls\n      if (this.options.styleEditorOptions.currentElement.target instanceof L.Marker) {\n        this.options.styleEditorOptions.markerType.setNewMarker()\n      }\n    }\n  })\n}\n","/**\n * FormElement used for styling the dash attribute\n */\nimport 'leaflet'\n\nexport default function setupDashElement () {\n  L.StyleEditor.formElements.DashElement = L.StyleEditor.formElements.FormElement.extend({\n\n    /** create the three standard dash options */\n    createContent: function () {\n      let uiElement = this.options.uiElement\n      let stroke = L.DomUtil.create('div', 'leaflet-styleeditor-stroke', uiElement)\n      stroke.style.backgroundPosition = '0px -75px'\n      L.DomEvent.addListener(stroke, 'click', function () {\n        this.setStyle('1')\n      }, this)\n\n      stroke = L.DomUtil.create('div', 'leaflet-styleeditor-stroke', uiElement)\n      stroke.style.backgroundPosition = '0px -95px'\n      L.DomEvent.addListener(stroke, 'click', function () {\n        this.setStyle('10, 10')\n      }, this)\n\n      stroke = L.DomUtil.create('div', 'leaflet-styleeditor-stroke', uiElement)\n      stroke.style.backgroundPosition = '0px -115px'\n      L.DomEvent.addListener(stroke, 'click', function () {\n        this.setStyle('15, 10, 1, 10')\n      }, this)\n    }\n  })\n}\n","import 'leaflet'\n\n/**\n * FormElement used for styling the icon\n */\nexport default function setupIconElement () {\n  L.StyleEditor.formElements.IconElement = L.StyleEditor.formElements.FormElement.extend({\n    // private classed used in the code\n    _selectOptionWrapperClasses: 'leaflet-styleeditor-select-option-wrapper leaflet-styleeditor-hidden',\n    _selectOptionClasses: 'leaflet-styleeditor-select-option',\n\n    /** create the icon selectBoxes */\n    createContent: function () {\n      let uiElement = this.options.uiElement\n      let selectBox = L.DomUtil.create('div', 'leaflet-styleeditor-select', uiElement)\n      this.options.selectBoxImage = this._createSelectInputImage(selectBox)\n\n      L.DomEvent.addListener(selectBox, 'click', this._toggleSelectInput, this)\n    },\n\n    /** show the correct icon in the correct color if the icon or color changed */\n    style: function () {\n      let iconOptions = this.options.styleEditorOptions.markerType.getIconOptions()\n      this._styleSelectInputImage(this.options.selectBoxImage,\n        iconOptions.icon, iconOptions.iconColor)\n      this._createColorSelect(this.options.styleEditorOptions.markerType.options.iconOptions.iconColor)\n      this._hideSelectOptions()\n    },\n\n    /** if lost focus hide potentially open SelectOption */\n    lostFocus: function () {\n      this._hideSelectOptions()\n    },\n\n    /** create image container that hides/shows the iconSelectBox */\n    _createSelectInputImage: function (parentUiElement) {\n      let wrapper = L.DomUtil.create('div', 'leaflet-styleeditor-select-image-wrapper', parentUiElement)\n      return L.DomUtil.create('div', 'leaflet-styleeditor-select-image', wrapper)\n    },\n\n    /** create appropriate image for color and icon */\n    _styleSelectInputImage: function (image, icon, color) {\n      if (!icon) {\n        icon = image.getAttribute('value')\n        if (!icon) {\n          return\n        }\n      }\n\n      let iconOptions = this.options.styleEditorOptions.markerType.getIconOptions()\n      if (color) {\n        iconOptions.iconColor = color\n      }\n\n      image.innerHTML = ''\n      this.options.styleEditorOptions.markerType.createSelectHTML(image, iconOptions, icon)\n      image.setAttribute('value', icon)\n    },\n\n    /** create the selectBox with the icons in the correct color */\n    _createColorSelect: function (color) {\n      if (!this.options.selectOptions) {\n        this.options.selectOptions = {}\n      }\n      if (color in this.options.selectOptions) {\n        return\n      }\n\n      let uiElement = this.options.uiElement\n      let selectOptionWrapper =\n        L.DomUtil.create('ul', this._selectOptionWrapperClasses, uiElement)\n\n      this.options.styleEditorOptions.util.getMarkersForColor(color).forEach(function (option) {\n        let selectOption = L.DomUtil.create('li', this._selectOptionClasses, selectOptionWrapper)\n        let selectImage = this._createSelectInputImage(selectOption)\n        this._styleSelectInputImage(selectImage, option, color)\n      }, this)\n\n      this.options.selectOptions[color] = selectOptionWrapper\n\n      L.DomEvent.addListener(selectOptionWrapper, 'click', function (e) {\n        e.stopPropagation()\n        let target = e.target\n        if (target.nodeName === 'UL') {\n          return\n        }\n        if (target.parentNode.className === 'leaflet-styleeditor-select-image') {\n          target = target.parentNode\n        } else {\n          while (target && target.className !== 'leaflet-styleeditor-select-image') {\n            target = target.childNodes[0]\n          }\n        }\n        this._selectMarker({\n          'target': target\n        }, this)\n      }, this)\n    },\n\n    /** show/hide iconSelectBox */\n    _toggleSelectInput: function (e) {\n      let currentColorElement = this._getCurrentColorElement(\n        this.options.styleEditorOptions.util.rgbToHex(\n          this.options.styleEditorOptions.markerType.options.iconOptions.iconColor\n        )\n      )\n\n      let show = false\n      if (currentColorElement) {\n        show = L.DomUtil.hasClass(currentColorElement, 'leaflet-styleeditor-hidden')\n      }\n\n      this._hideSelectOptions()\n\n      if (show) {\n        this.options.styleEditorOptions.util.showElement(currentColorElement)\n      }\n    },\n\n    /** called when user selects a marker */\n    _selectMarker: function (e) {\n      let value = this._getValue(e.target)\n\n      // update style\n      this.options.selectBoxImage.setAttribute('value', value)\n      this.setStyle(value)\n\n      this._hideSelectOptions()\n    },\n\n    /** helper function to return attribute value of target */\n    _getValue: function (target) {\n      return target.getAttribute('value')\n    },\n\n    /** return correct selectBox depending on which color is currently chosen */\n    _getCurrentColorElement: function (color) {\n      if (!this.options.selectOptions[color]) {\n        this._createColorSelect(color)\n      }\n      return this.options.selectOptions[color]\n    },\n\n    /** hide open SelectOption */\n    _hideSelectOptions: function () {\n      for (let selectOption in this.options.selectOptions) {\n        this.options.styleEditorOptions.util.hideElement(this.options.selectOptions[selectOption])\n      }\n    }\n\n  })\n}\n","import 'leaflet'\n\n/**\n * FormElement used to style opacity\n */\nexport default function setupOpacityElement () {\n  L.StyleEditor.formElements.OpacityElement = L.StyleEditor.formElements.FormElement.extend({\n\n    /** create number input box */\n    createContent: function () {\n      this.options.label = L.DomUtil.create('span', 'leaflet-styleeditor-input-span', this.options.uiElement)\n\n      let slider = this.options.slider = L.DomUtil.create('input', 'leaflet-styleeditor-input',\n        this.options.uiElement)\n      slider.type = 'range'\n      slider.max = 1\n      slider.min = 0\n      slider.step = 0.01\n      slider.value = 0.5\n\n      // add event listeners\n      L.DomEvent.addListener(slider, 'change', this._setStyle, this)\n      L.DomEvent.addListener(slider, 'input', this._setStyle, this)\n      L.DomEvent.addListener(slider, 'keyup', this._setStyle, this)\n      L.DomEvent.addListener(slider, 'mouseup', this._setStyle, this)\n    },\n\n    /** set correct value */\n    style: function () {\n      this.options.slider.value = this.options.styleEditorOptions.util.getStyle(this.options.styleOption)\n      this.options.label.innerText = parseInt(100 * this.options.slider.value) + '%'\n    },\n\n    /** communicate opacity value */\n    _setStyle: function () {\n      this.setStyle(this.options.slider.value)\n    }\n  })\n}\n","import 'leaflet'\n\n/**\n * FormElement used for adding a description to marker or geometry.\n */\nexport default function setupPopupContentElement () {\n  L.StyleEditor.formElements.PopupContentElement = L.StyleEditor.formElements.FormElement.extend({\n\n    options: {\n      title: 'Description'\n    },\n\n    createContent: function () {\n      let uiElement = this.options.uiElement\n\n      let textArea = this.options.descTextAreaField = L.DomUtil.create('textarea', 'leaflet-styleeditor-input', uiElement)\n      L.DomEvent.addListener(textArea, 'change', this._setStyle, this)\n    },\n\n    /** set correct value */\n    style: function () {\n      let selectedElement = this.options.styleEditorOptions.util.getCurrentElement()\n\n      if (selectedElement && selectedElement.options) {\n        this.options.descTextAreaField.value = selectedElement.options.popupContent || ''\n      }\n    },\n\n    /** communicate popupContent value */\n    _setStyle: function () {\n      let currentElement = this.options.styleEditorOptions.util.getCurrentElement()\n      let inputText = this.options.descTextAreaField.value\n\n      // check whether a layer is part of a layerGroup\n      let layers = [currentElement]\n      if (currentElement instanceof L.LayerGroup) {\n        layers = Object.values(currentElement._layers)\n      }\n\n      // update layer (or all layers of a layerGroup)\n      for (let i = 0; i < layers.length; i++) {\n        let marker = layers[i]\n        if (marker && marker.getPopup && marker.bindPopup) {\n          let popup1 = marker.getPopup()\n          if (popup1) {\n            popup1.setContent(inputText)\n          } else {\n            marker.bindPopup(inputText)\n          }\n          // tmp store the text content for init next time\n          marker.options = marker.options || {}\n          marker.options.popupContent = inputText\n        }\n      }\n\n      this.setStyle(inputText)\n    }\n  })\n}\n","import 'leaflet'\n\n/**\n * FormElement to set style of an icon\n */\nexport default function setupSizeElement () {\n  L.StyleEditor.formElements.SizeElement = L.StyleEditor.formElements.FormElement.extend({\n\n    /** create the 3 standard icon sizes */\n    createContent: function () {\n      let uiElement = this.options.uiElement\n      let select = L.DomUtil.create('div', 'leaflet-styleeditor-sizeicon sizeicon-small', uiElement)\n      L.DomEvent.addListener(select, 'click', function () {\n        this.setStyle(this.options.styleEditorOptions.markerType.options.size.small)\n      }, this)\n\n      select = L.DomUtil.create('div', 'leaflet-styleeditor-sizeicon sizeicon-medium', uiElement)\n      L.DomEvent.addListener(select, 'click', function () {\n        this.setStyle(this.options.styleEditorOptions.markerType.options.size.medium)\n      }, this)\n\n      select = L.DomUtil.create('div', 'leaflet-styleeditor-sizeicon sizeicon-large', uiElement)\n      L.DomEvent.addListener(select, 'click', function () {\n        this.setStyle(this.options.styleEditorOptions.markerType.options.size.large)\n      }, this)\n    }\n  })\n}\n","import 'leaflet'\n\n/**\n * FormElement used to style weight\n */\nexport default function setupWeightElement () {\n  L.StyleEditor.formElements.WeightElement = L.StyleEditor.formElements.FormElement.extend({\n\n    /** create number input box */\n    createContent: function () {\n      this.options.label = L.DomUtil.create('span', 'leaflet-styleeditor-input-span', this.options.uiElement)\n\n      let weight = this.options.weight = L.DomUtil.create('input', 'leaflet-styleeditor-input',\n        this.options.uiElement)\n      weight.type = 'range'\n      weight.min = 0\n      weight.max = 20\n      weight.step = 1\n      weight.value = 4\n\n      // add event listeners\n      L.DomEvent.addListener(weight, 'change', this._setStyle, this)\n      L.DomEvent.addListener(weight, 'input', this._setStyle, this)\n      L.DomEvent.addListener(weight, 'keyup', this._setStyle, this)\n      L.DomEvent.addListener(weight, 'mouseup', this._setStyle, this)\n    },\n\n    /** set correct value */\n    style: function () {\n      this.options.weight.value = this.options.styleEditorOptions.util.getStyle(this.options.styleOption)\n      this.options.label.innerText = this.options.weight.value\n    },\n\n    /** communicate weight value */\n    _setStyle: function () {\n      this.setStyle(this.options.weight.value)\n    }\n  })\n}\n","import 'leaflet'\n\n/**\n * Forms consist of FormElements and are shown in the StyleForm\n * There exists a MarkerForm to modify Markers and a GeometryForm to modify Geometries (i.e. rectangles...)\n * Style options based on:\n *     - path: https://leafletjs.com/reference.html#path-options\n *     - icon: https://leafletjs.com/reference.html#icon\n */\nexport default function setupForm () {\n  L.StyleEditor.forms.Form = L.Class.extend({\n    initialize: function (options) {\n      if (options) {\n        L.setOptions(this, options)\n      }\n      this.options.initializedElements = []\n    },\n\n    /** create every FormElement in the parentUiElement */\n    create: function (parentUiElement) {\n      this.options.parentUiElement = parentUiElement\n\n      let formElements = this.getFormElements()\n      let styleFormKeys = Object.keys(formElements)\n\n      for (let i = 0; i < styleFormKeys.length; i++) {\n        let formElement = this.getFormElementClass(styleFormKeys[i], formElements)\n        if (formElement !== undefined) {\n          formElement.create(parentUiElement)\n          this.options.initializedElements.push(formElement)\n        }\n      }\n    },\n\n    /** hide the Form including its FormElements */\n    hide: function () {\n      this.hideFormElements()\n      this.hideForm()\n    },\n\n    /** hide the FormElements */\n    hideFormElements: function () {\n      for (let i = 0; i < this.options.initializedElements.length; i++) {\n        this.options.initializedElements[i].hide()\n      }\n    },\n\n    /** hide the Form */\n    hideForm: function () {\n      this.options.styleEditorOptions.util.hideElement(this.options.parentUiElement)\n    },\n\n    /** make FormElements and Form visible */\n    show: function () {\n      this.preShow()\n      this.showFormElements()\n      this.showForm()\n      this.style()\n    },\n\n    /** hook which is called at the beginning of the show function */\n    preShow: function () {\n    },\n\n    /** make every FormElement visible */\n    showFormElements: function () {\n      for (let i = 0; i < this.options.initializedElements.length; i++) {\n        this.showFormElement(this.options.initializedElements[i])\n      }\n    },\n\n    /** make the Form visible */\n    showForm: function () {\n      this.options.styleEditorOptions.util.showElement(this.options.parentUiElement)\n    },\n\n    /** inform FormElements the selected style has changed, so they can adapt */\n    style: function () {\n      for (let i = 0; i < this.options.initializedElements.length; i++) {\n        this.options.initializedElements[i].style()\n      }\n    },\n\n    /** inform Form it lost it's focus */\n    lostFocus: function () {\n      for (let i = 0; i < this.options.initializedElements.length; i++) {\n        this.options.initializedElements[i].lostFocus()\n      }\n    },\n\n    /**\n     * @returns a Boolean indicating if the @param formElement should be shown\n     */\n    showFormElement: function (formElement) {\n      // check wether element should be shown or not\n      if (this.showFormElementForStyleOption(formElement.options.styleOption)) {\n        formElement.show()\n      } else {\n        formElement.hide()\n      }\n    },\n\n    /**\n     * get the currently used formElements\n     * either standard or the ones provided while instanciation\n     */\n    getFormElements: function () {\n      let formElements\n      if (this.options.formOptionKey in this.options.styleEditorOptions.forms) {\n        formElements = this.options.styleEditorOptions.forms[this.options.formOptionKey]\n      } else {\n        formElements = this.options.formElements\n      }\n      return formElements\n    },\n\n    /**\n     * get the Class of the Formelement to instanciate\n     * @param {*} styleOption, the styleOption to get the FormElement for\n     */\n    getFormElementClass: function (styleOption) {\n      let formElements = this.getFormElements()\n      let formElementKeys = Object.keys(formElements)\n\n      if (formElementKeys.indexOf(styleOption) >= 0) {\n        let FormElement = formElements[styleOption]\n\n        if (FormElement) {\n          // may be a dictionary\n          if (typeof FormElement === 'boolean') {\n            return this.getFormElementStandardClass(styleOption)\n          }\n\n          if ('formElement' in FormElement && 'boolean' in FormElement) {\n            FormElement = FormElement['formElement']\n          }\n          // try to instantiate FormElementOption and return StandardClass if it does not work\n          try {\n            let formElementInstance = new FormElement({\n              styleOption: styleOption,\n              parentForm: this,\n              styleEditorOptions: this.options.styleEditorOptions\n            })\n            if (formElementInstance instanceof L.StyleEditor.formElements.FormElement) {\n              return formElementInstance\n            }\n          } catch (e) {\n            // creating instance failed fallback to StandardClass\n          }\n        }\n        // if nothing works return it\n        return this.getFormElementStandardClass(styleOption)\n      }\n    },\n\n    /**\n     * check whether a FormElement should be shown\n     * @param {*} styleOption, the styleOption to check\n     */\n    showFormElementForStyleOption (styleOption) {\n      let formElements = this.getFormElements()\n      if (styleOption in formElements) {\n        let styleFormElement = formElements[styleOption]\n\n        // maybe a function is given to declare when to show the FormElement\n        if (typeof styleFormElement === 'function') {\n          try {\n            return styleFormElement(this.options.styleEditorOptions.util.getCurrentElement())\n          } catch (err) {\n            // the given function presumably is a constructor -> always show it\n            return true\n          }\n        }\n\n        // maybe a boolean is given to indicate whether to show it\n        if (typeof styleFormElement === 'boolean') {\n          return styleFormElement\n        }\n\n        // check for dictionary\n        if ('boolean' in styleFormElement) {\n          // in a dictionary boolean may be a function or boolean\n          if (typeof styleFormElement['boolean'] === 'function') {\n            return styleFormElement['boolean'](this.options.styleEditorOptions.util.getCurrentElement())\n          }\n          return styleFormElement['boolean']\n        }\n        return true\n      }\n      return false\n    },\n\n    /**\n     * get Leaflet.StyleEditor standard FormElement class for given styleOption\n     * @param {*} styleOption, the styleOption to get the standard class for\n     */\n    getFormElementStandardClass (styleOption) {\n      return new this.options.formElements[styleOption](\n        {styleOption: styleOption, parentForm: this, styleEditorOptions: this.options.styleEditorOptions})\n    }\n  })\n}\n","import 'leaflet'\n\n/** Form used to enable modification of a Geometry */\nexport default function setupGeometryForm () {\n  L.StyleEditor.forms.GeometryForm = L.StyleEditor.forms.Form.extend({\n    options: {\n      formOptionKey: 'geometry',\n      formElements: {\n        'color': L.StyleEditor.formElements.ColorElement,\n        'opacity': L.StyleEditor.formElements.OpacityElement,\n        'weight': L.StyleEditor.formElements.WeightElement,\n        'dashArray': L.StyleEditor.formElements.DashElement,\n        'fillColor': L.StyleEditor.formElements.ColorElement,\n        'fillOpacity': L.StyleEditor.formElements.OpacityElement,\n        'popupContent': L.StyleEditor.formElements.PopupContentElement\n      }\n    },\n\n    /** show the fillOptions (fillColor and fillOpacity) only if the Element can be filled */\n    showFormElements: function () {\n      for (let i = 0; i < this.options.initializedElements.length; i++) {\n        if (this.options.initializedElements[i].options.styleOption.indexOf('fill') === 0) {\n          if (this.options.styleEditorOptions.util.fillCurrentElement()) {\n            this.showFormElement(this.options.initializedElements[i])\n          } else {\n            this.options.initializedElements[i].hide()\n          }\n        } else {\n          this.showFormElement(this.options.initializedElements[i])\n        }\n      }\n    }\n  })\n}\n","import 'leaflet'\n\n/** Form used to enable modification of a Geometry */\nexport default function setupMarkerForm () {\n  L.StyleEditor.forms.MarkerForm = L.StyleEditor.forms.Form.extend({\n    options: {\n      formOptionKey: 'marker',\n      formElements: {\n        'icon': L.StyleEditor.formElements.IconElement,\n        'color': L.StyleEditor.formElements.ColorElement,\n        'size': L.StyleEditor.formElements.SizeElement,\n        'popupContent': L.StyleEditor.formElements.PopupContentElement\n      }\n    }\n\n  })\n}\n","import 'leaflet'\n\n/**\n * The Base class for different markers\n */\nexport default function setupMarker () {\n  L.StyleEditor.marker.Marker = L.Marker.extend({\n    /** define markerForm used to style the Marker */\n    markerForm: L.StyleEditor.forms.MarkerForm,\n\n    options: {\n      size: {\n        'small': [20, 50],\n        'medium': [30, 70],\n        'large': [35, 90]\n      },\n\n      selectIconSize: [],\n      selectIconClass: '',\n      iconOptions: {}\n    },\n\n    /** set standard icon */\n    initialize: function (options) {\n      L.setOptions(this, options)\n      L.setOptions(this, this.options)\n\n      if (this.options.selectIconClass !== '' && !this.options.selectIconClass.startsWith('leaflet-styleeditor-select-image')) {\n        this.options.selectIconClass = 'leaflet-styleeditor-select-image-' + this.options.selectIconClass\n      }\n    },\n\n    /** create new Marker and show it */\n    setNewMarker: function () {\n      let newIcon = this._createMarkerIcon()\n      let currentElement = this.options.styleEditorOptions.currentElement.target\n      currentElement.setIcon(newIcon)\n      if (currentElement instanceof L.LayerGroup) {\n        currentElement.eachLayer(function (layer) {\n          L.DomUtil.addClass(layer.getElement(), 'leaflet-styleeditor-marker-selected')\n        })\n      } else {\n        L.DomUtil.addClass(currentElement.getElement(), 'leaflet-styleeditor-marker-selected')\n      }\n    },\n\n    /** set styling options */\n    setStyle: function (styleOption, value) {\n      if (styleOption !== 'icon') {\n        styleOption = 'icon' + styleOption.charAt(0).toUpperCase() + styleOption.slice(1)\n      }\n      this.setIconOptions(styleOption, value)\n      this.setNewMarker()\n    },\n\n    /** create HTML used to */\n    createSelectHTML: function (parentUiElement, iconOptions, icon) {\n    },\n\n    /** get the current iconOptions\n     *  if not set set them\n     */\n    getIconOptions: function () {\n      try {\n        this.options.iconOptions = this.options.styleEditorOptions.currentElement.target.options.icon.options\n      } catch (e) {\n        // if a new marker is created it may be the currentItem is still set, but is no marker\n      }\n\n      if (Object.keys(this.options.iconOptions).length > 0) {\n        return this.options.iconOptions\n      }\n\n      this.options.iconOptions.iconColor = this._getDefaultMarkerColor()\n      this.options.iconOptions.iconSize = this.options.styleEditorOptions.markerType.options.size.small\n      this.options.iconOptions.icon = this.options.styleEditorOptions.util.getDefaultMarkerForColor(this.options.iconOptions.iconColor)\n\n      this.options.iconOptions = this._ensureMarkerIcon(this.options.iconOptions)\n      return this.options.iconOptions\n    },\n\n    resetIconOptions: function () {\n      Object.keys(this.getIconOptions()).forEach((key) =>\n        this.setStyle(key, this.options.iconOptions[key])\n      )\n    },\n\n    setIconOptions: function (key, value) {\n      let iconOptions = this.getIconOptions()\n      iconOptions[key] = value\n    },\n\n    /** call createMarkerIcon with the correct iconOptions */\n    _createMarkerIcon: function () {\n      let iconOptions = this.getIconOptions()\n      return this.createMarkerIcon(iconOptions)\n    },\n\n    /** check that the icon set in the iconOptions exists\n     *  else set default icon\n     */\n    _ensureMarkerIcon: function (iconOptions) {\n      let markers = this.options.styleEditorOptions.util.getMarkersForColor(iconOptions.iconColor)\n\n      if (markers.includes(iconOptions.icon)) {\n        return iconOptions\n      }\n\n      iconOptions.icon = this.options.styleEditorOptions.util.getDefaultMarkerForColor(iconOptions.iconColor)\n      return iconOptions\n    },\n\n    /** return default marker color\n     *\n     * will return the first of the following which is set and supported by the markers\n     * 1. styleEditorOptions.defaultMarkerColor\n     * 2. styleEditorOptions.defaultColor\n     * 3. first color of the marker's colorRamp which is in the styleeditor.colorRamp\n     * 4. first color of the marker's colorRamp\n     * */\n    _getDefaultMarkerColor: function () {\n      let markerTypeColorRamp = this.options.colorRamp\n      let generalColorRamp = this.options.styleEditorOptions.colorRamp\n      let intersectedColorRamp = []\n\n      if (typeof markerTypeColorRamp !== 'undefined' && markerTypeColorRamp !== null) {\n        intersectedColorRamp = markerTypeColorRamp.filter((n) => generalColorRamp.includes(n))\n        if (intersectedColorRamp.length === 0) {\n          intersectedColorRamp = markerTypeColorRamp\n        }\n      } else {\n        intersectedColorRamp = generalColorRamp\n      }\n\n      let color = this.options.styleEditorOptions.defaultMarkerColor\n      if (color !== null && !intersectedColorRamp.includes(color)) {\n        color = null\n      }\n\n      if (color === null) {\n        color = this.options.styleEditorOptions.defaultColor\n        if (color !== null && !intersectedColorRamp.includes(color)) {\n          color = null\n        }\n\n        if (color === null) {\n          color = intersectedColorRamp[0]\n        }\n      }\n      return this.options.styleEditorOptions.util.rgbToHex(color)\n    },\n\n    /** return size as keyword */\n    sizeToName: function (size) {\n      let keys = Object.keys(this.options.size)\n\n      if (typeof size === 'string') {\n        if (size === 's') {\n          size = 'small'\n        } else if (size === 'm') {\n          size = 'medium'\n        } else if (size === 'l') {\n          size = 'large'\n        }\n\n        for (let i = 0; i < keys.length; i++) {\n          if (this.options.size[keys[i]] === size) {\n            return keys[i]\n          }\n        }\n      }\n\n      let values = Object.values(this.options.size)\n      for (let i = 0; i < values.length; i++) {\n        if (JSON.stringify(size) === JSON.stringify(values[i])) {\n          return keys[i]\n        }\n      }\n\n      return keys[0]\n    },\n\n    /** return size as [x,y] */\n    sizeToPixel: function (size) {\n      size = this.sizeToName(size)\n      return this.options.size[size]\n    }\n  })\n}\n","import 'leaflet'\n\n/**\n * The \"old\" marker style used by L.StyleEditor\n * used the mapbox API v3\n */\nexport default function setupDefaultMarker () {\n  L.StyleEditor.marker.DefaultMarker = L.StyleEditor.marker.Marker.extend({\n\n    createMarkerIcon: function (iconOptions, iconClass) {\n      if (!iconClass) {\n        iconClass = ''\n      }\n\n      let iconSize = iconOptions.iconSize\n      return new L.Icon({\n        iconUrl: this._getMarkerUrlForStyle(iconOptions),\n        iconSize: iconOptions.iconSize,\n        iconColor: iconOptions.iconColor,\n        icon: iconOptions.icon,\n        className: iconClass,\n        iconAnchor: [iconSize[0] / 2, iconSize[1] / 2],\n        popupAnchor: [0, -iconSize[1] / 2]\n      })\n    },\n\n    createSelectHTML: function (parentUiElement, iconOptions, icon) {\n      let tmpOptions = {}\n      tmpOptions.iconSize = this.options.size.small\n      tmpOptions.icon = icon\n      tmpOptions.iconColor = iconOptions.iconColor\n\n      parentUiElement.innerHTML = this.createMarkerIcon(tmpOptions, this.options.selectIconClass).createIcon().outerHTML\n    },\n\n    _getMarkerUrlForStyle: function (iconOptions) {\n      return this._getMarkerUrl(iconOptions.iconSize, iconOptions.iconColor, iconOptions.icon)\n    },\n\n    _getMarkerUrl: function (size, color, icon) {\n      size = this.sizeToName(size)[0]\n      if (color.indexOf('#') === 0) {\n        color = color.replace('#', '')\n      } else {\n        color = this.options.styleEditorOptions.util.rgbToHex(color, true)\n      }\n      let url = 'https://api.tiles.mapbox.com/v3/marker/pin-' + size\n      if (icon) {\n        url += '-' + icon\n      }\n      return url + '+' + color + '.png'\n    },\n\n    options: {\n      selectIconClass: 'defaultmarker',\n      markers: [\n        'circle-stroked',\n        'circle',\n        'square-stroked',\n        'square',\n        'triangle-stroked', 'triangle',\n        'star-stroked',\n        'star',\n        'cross',\n        'marker-stroked',\n        'marker',\n        'religious-jewish',\n        'religious-christian',\n        'religious-muslim',\n        'cemetery',\n        'rocket',\n        'airport',\n        'heliport',\n        'rail',\n        'rail-metro',\n        'rail-light',\n        'bus',\n        'fuel',\n        'parking',\n        'parking-garage',\n        'airfield',\n        'roadblock',\n        'ferry',\n        'harbor',\n        'bicycle',\n        'park',\n        'park2',\n        'museum',\n        'lodging',\n        'monument',\n        'zoo',\n        'garden',\n        'campsite',\n        'theatre',\n        'art-gallery',\n        'pitch',\n        'soccer',\n        'america-football',\n        'tennis',\n        'basketball',\n        'baseball',\n        'golf',\n        'swimming',\n        'cricket',\n        'skiing',\n        'school',\n        'college',\n        'library',\n        'post',\n        'fire-station',\n        'town-hall',\n        'police',\n        'prison',\n        'embassy',\n        'beer',\n        'restaurant',\n        'cafe',\n        'shop',\n        'fast-food',\n        'bar',\n        'bank',\n        'grocery',\n        'cinema',\n        'pharmacy',\n        'hospital',\n        'danger',\n        'industrial',\n        'warehouse',\n        'commercial',\n        'building',\n        'place-of-worship',\n        'alcohol-shop',\n        'logging',\n        'oil-well',\n        'slaughterhouse',\n        'dam',\n        'water',\n        'wetland',\n        'disability',\n        'telephone',\n        'emergency-telephone',\n        'toilets',\n        'waste-basket',\n        'music',\n        'land-use',\n        'city',\n        'town',\n        'village',\n        'farm',\n        'bakery',\n        'dog-park',\n        'lighthouse',\n        'clothing-store',\n        'polling-place',\n        'playground',\n        'entrance',\n        'heart',\n        'london-underground',\n        'minefield',\n        'rail-underground',\n        'rail-above',\n        'camera',\n        'laundry',\n        'car',\n        'suitcase',\n        'hairdresser',\n        'chemist',\n        'mobilephone',\n        'scooter'\n      ]\n    }\n  })\n}\n","import 'leaflet'\n\n/**\n * Example class showing how to implement new MarkerClasses\n * uses the glyphicons given by bootstrap\n */\nexport default function setupGlyphiconMarker () {\n  L.StyleEditor.marker.GlyphiconMarker = L.StyleEditor.marker.Marker.extend({\n    getMarkerHtml: function (size, color, icon) {\n      let iconUrl = this._getMarkerUrl(size, color)\n      return '<div class=\"leaflet-styleeditor-marker leaflet-styleeditor-marker-' +\n        this.sizeToName(size)[0] + '\" ' +\n        'style=\"background-image: url(' + iconUrl + ');\">' +\n        '<div class=\"leaflet-styleeditor-fill\"></div>' +\n        '<i class=\"glyphicon ' + icon + '\"></i>' +\n        '<div class=\"leaflet-styleeditor-fill\"></div>' +\n        '</div>'\n    },\n\n    createMarkerIcon: function (iconOptions) {\n      let iconSize = iconOptions.iconSize\n      return L.divIcon({\n        className: 'leaflet-styleeditor-glyphicon-marker-wrapper',\n        html: this.getMarkerHtml(iconSize, iconOptions.iconColor, iconOptions.icon),\n        icon: iconOptions.icon,\n        iconColor: iconOptions.iconColor,\n        iconSize: iconSize,\n        iconAnchor: [iconSize[0] / 2, iconSize[1] / 2],\n        popupAnchor: [0, -iconSize[1] / 2]\n      })\n    },\n\n    setStyle: function (styleOption, value) {\n      if (styleOption !== 'icon') {\n        styleOption = 'icon' + styleOption.charAt(0).toUpperCase() + styleOption.slice(1)\n      }\n\n      let iconOptions = this.options.iconOptions\n      if (iconOptions[styleOption] !== value) {\n        iconOptions[styleOption] = value\n        this.setNewMarker()\n      }\n    },\n\n    createSelectHTML: function (parentUiElement, iconOptions, icon) {\n      parentUiElement.innerHTML = this.getMarkerHtml('s', iconOptions.iconColor, icon)\n    },\n\n    _getMarkerUrlForStyle: function (iconOptions) {\n      return this._getMarkerUrl(iconOptions.iconSize, iconOptions.iconColor, iconOptions.icon)\n    },\n\n    _getMarkerUrl: function (size, color, icon) {\n      size = this.sizeToName(size)[0]\n      if (color.indexOf('#') === 0) {\n        color = color.replace('#', '')\n      } else {\n        color = this.options.styleEditorOptions.util.rgbToHex(color, true)\n      }\n      let url = 'https://api.tiles.mapbox.com/v3/marker/pin-' + size\n      return url + '+' + color + '.png'\n    },\n\n    options: {\n      markers: [\n        'glyphicon-plus',\n        'glyphicon-asterisk',\n        'glyphicon-plus',\n        'glyphicon-euro',\n        'glyphicon-minus',\n        'glyphicon-cloud',\n        'glyphicon-envelope',\n        'glyphicon-pencil',\n        'glyphicon-glass',\n        'glyphicon-music',\n        'glyphicon-search',\n        'glyphicon-heart',\n        'glyphicon-star',\n        'glyphicon-star-empty',\n        'glyphicon-user',\n        'glyphicon-film',\n        'glyphicon-th-large',\n        'glyphicon-th',\n        'glyphicon-th-list',\n        'glyphicon-ok',\n        'glyphicon-remove',\n        'glyphicon-zoom-in',\n        'glyphicon-zoom-out',\n        'glyphicon-off',\n        'glyphicon-signal',\n        'glyphicon-cog',\n        'glyphicon-trash',\n        'glyphicon-home',\n        'glyphicon-file',\n        'glyphicon-time',\n        'glyphicon-road',\n        'glyphicon-download-alt',\n        'glyphicon-download',\n        'glyphicon-upload',\n        'glyphicon-inbox',\n        'glyphicon-play-circle',\n        'glyphicon-repeat',\n        'glyphicon-refresh',\n        'glyphicon-list-alt',\n        'glyphicon-lock',\n        'glyphicon-flag',\n        'glyphicon-headphones',\n        'glyphicon-volume-off',\n        'glyphicon-volume-down',\n        'glyphicon-volume-up',\n        'glyphicon-qrcode',\n        'glyphicon-barcode',\n        'glyphicon-tag',\n        'glyphicon-tags',\n        'glyphicon-book',\n        'glyphicon-bookmark',\n        'glyphicon-print',\n        'glyphicon-camera',\n        'glyphicon-font',\n        'glyphicon-bold',\n        'glyphicon-italic',\n        'glyphicon-text-height',\n        'glyphicon-text-width',\n        'glyphicon-align-left',\n        'glyphicon-align-center',\n        'glyphicon-align-right',\n        'glyphicon-align-justify',\n        'glyphicon-list',\n        'glyphicon-indent-left',\n        'glyphicon-indent-right',\n        'glyphicon-facetime-video',\n        'glyphicon-picture',\n        'glyphicon-map-marker',\n        'glyphicon-adjust',\n        'glyphicon-tint',\n        'glyphicon-edit',\n        'glyphicon-share',\n        'glyphicon-check',\n        'glyphicon-move',\n        'glyphicon-chevron-right',\n        'glyphicon-plus-sign',\n        'glyphicon-minus-sign',\n        'glyphicon-remove-sign',\n        'glyphicon-ok-sign',\n        'glyphicon-question-sign',\n        'glyphicon-info-sign',\n        'glyphicon-screenshot',\n        'glyphicon-remove-circle',\n        'glyphicon-ok-circle',\n        'glyphicon-ban-circle',\n        'glyphicon-arrow-left',\n        'glyphicon-arrow-right',\n        'glyphicon-arrow-up',\n        'glyphicon-arrow-down',\n        'glyphicon-share-alt',\n        'glyphicon-resize-full',\n        'glyphicon-resize-small',\n        'glyphicon-exclamation-sign',\n        'glyphicon-gift',\n        'glyphicon-leaf',\n        'glyphicon-fire',\n        'glyphicon-eye-open',\n        'glyphicon-eye-close',\n        'glyphicon-warning-sign',\n        'glyphicon-plane',\n        'glyphicon-calendar',\n        'glyphicon-random',\n        'glyphicon-comment',\n        'glyphicon-magnet',\n        'glyphicon-chevron-up',\n        'glyphicon-chevron-down',\n        'glyphicon-retweet',\n        'glyphicon-shopping-cart',\n        'glyphicon-bullhorn',\n        'glyphicon-bell',\n        'glyphicon-certificate',\n        'glyphicon-thumbs-up',\n        'glyphicon-thumbs-down',\n        'glyphicon-hand-right',\n        'glyphicon-hand-left',\n        'glyphicon-hand-up',\n        'glyphicon-hand-down',\n        'glyphicon-circle-arrow-right',\n        'glyphicon-circle-arrow-left',\n        'glyphicon-circle-arrow-up',\n        'glyphicon-circle-arrow-down',\n        'glyphicon-globe',\n        'glyphicon-wrench',\n        'glyphicon-tasks',\n        'glyphicon-filter',\n        'glyphicon-briefcase',\n        'glyphicon-fullscreen',\n        'glyphicon-dashboard',\n        'glyphicon-paperclip',\n        'glyphicon-heart-empty',\n        'glyphicon-link',\n        'glyphicon-phone',\n        'glyphicon-pushpin',\n        'glyphicon-usd'\n      ]\n    }\n  })\n}\n","import 'leaflet'\n\nexport default function setupStyleForm () {\n  L.StyleForm = L.Class.extend({\n    initialize: function (options) {\n      L.setOptions(this, options)\n\n      this.createMarkerForm()\n      this.createGeometryForm()\n\n      this.addDOMEvents()\n    },\n\n    addDOMEvents: function () {\n      L.DomEvent.addListener(this.options.styleEditorOptions.map, 'click', this.lostFocus, this)\n      L.DomEvent.addListener(this.options.styleEditorDiv, 'click', this.lostFocus, this)\n    },\n\n    clearForm: function () {\n      this.options.styleEditorOptions.markerForm.hide()\n      this.options.styleEditorOptions.geometryForm.hide()\n    },\n\n    createMarkerForm: function () {\n      let markerDiv = L.DomUtil.create(\n        'div', 'leaflet-styleeditor-interior-marker', this.options.styleEditorInterior)\n      this.options.styleEditorOptions.markerForm.create(markerDiv)\n    },\n\n    createGeometryForm: function () {\n      let markerDiv = L.DomUtil.create(\n        'div', 'leaflet-styleeditor-interior-geometry', this.options.styleEditorInterior)\n      this.options.styleEditorOptions.geometryForm.create(markerDiv)\n    },\n\n    showMarkerForm: function () {\n      this.clearForm()\n      this.options.styleEditorOptions.markerForm.show()\n    },\n\n    showGeometryForm: function () {\n      this.clearForm()\n      this.options.styleEditorOptions.geometryForm.show()\n    },\n\n    fireChangeEvent: function (element) {\n      this.options.styleEditorOptions.util.fireChangedEvent(element)\n    },\n\n    lostFocus: function (e) {\n      let parent = e.target\n      for (let i = 0; i < 10; i++) {\n        if (!parent) {\n          break\n        }\n        if (!!parent.className && L.DomUtil.hasClass(parent, 'leaflet-styleeditor-interior')) {\n          return\n        }\n        parent = parent.parentNode\n      }\n\n      this.options.styleEditorOptions.markerForm.lostFocus()\n      this.options.styleEditorOptions.geometryForm.lostFocus()\n    }\n  })\n}\n","import 'leaflet'\n\nexport default function setupControl () {\n  L.Control.StyleEditor = L.Control.extend({\n    options: {\n      position: 'topleft',\n\n      colorRamp: ['#1abc9c', '#2ecc71', '#3498db', '#9b59b6', '#34495e', '#16a085', '#27ae60', '#2980b9', '#8e44ad',\n        '#2c3e50', '#f1c40f', '#e67e22', '#e74c3c', '#ecf0f1', '#95a5a6', '#f39c12', '#d35400', '#c0392b',\n        '#bdc3c7', '#7f8c8d'],\n      defaultColor: null,\n\n      markerType: L.StyleEditor.marker.DefaultMarker,\n      markers: null,\n      defaultMarkerIcon: null,\n      defaultMarkerColor: null,\n\n      geometryForm: L.StyleEditor.forms.GeometryForm,\n\n      ignoreLayerTypes: [],\n\n      forms: {},\n\n      openOnLeafletDraw: true,\n      openOnLeafletEditable: true,\n\n      showTooltip: true,\n\n      strings: {\n        cancel: 'Cancel',\n        cancelTitle: 'Cancel Styling',\n        tooltip: 'Click on the element you want to style',\n        tooltipNext: 'Choose another element you want to style'\n      },\n      useGrouping: true,\n\n      styleEditorEventPrefix: 'styleeditor:',\n\n      // internal\n      currentElement: null,\n      _editLayers: [],\n      _layerGroups: []\n\n    },\n\n    initialize: function (options) {\n      if (options) {\n        L.setOptions(this, options)\n      }\n\n      this.options.util = new L.StyleEditor.Util({styleEditorOptions: this.options})\n\n      // eslint-disable-next-line new-cap\n      this.options.markerType = new this.options.markerType({styleEditorOptions: this.options})\n      // eslint-disable-next-line new-cap\n      this.options.markerForm = new this.options.markerType.markerForm({styleEditorOptions: this.options})\n      // eslint-disable-next-line new-cap\n      this.options.geometryForm = new this.options.geometryForm({styleEditorOptions: this.options})\n\n      this.getDefaultIcon = this.options.markerType._createMarkerIcon.bind(this.options.markerType)\n      this.createIcon = this.options.markerType.createMarkerIcon.bind(this.options.markerType)\n    },\n\n    onAdd: function (map) {\n      this.options.map = map\n      return this.createUi()\n    },\n\n    fireEvent: function (eventName, element) {\n      this.options.util.fireEvent(eventName, element)\n    },\n\n    createUi: function () {\n      let controlDiv = this.options.controlDiv = L.DomUtil.create('div', 'leaflet-control-styleeditor leaflet-control leaflet-bar')\n      let controlUI = this.options.controlUI = L.DomUtil.create('a', 'leaflet-control-styleeditor-interior',\n        controlDiv)\n      controlUI.title = 'Style Editor'\n\n      let cancel = this.options.cancelUI = L.DomUtil.create('div', 'leaflet-control-styleeditor-cancel leaflet-styleeditor-hidden', controlDiv)\n      cancel.innerHTML = this.options.strings.cancel\n      cancel.title = this.options.strings.cancelTitle\n\n      let styleEditorDiv = this.options.styleEditorDiv =\n        L.DomUtil.create('div', 'leaflet-styleeditor', this.options.map._container)\n      this.options.styleEditorHeader = L.DomUtil.create('div', 'leaflet-styleeditor-header', styleEditorDiv)\n      let styleEditorInterior = L.DomUtil.create('div', 'leaflet-styleeditor-interior', styleEditorDiv)\n\n      this.addDomEvents()\n      this.addEventListeners()\n      this.addButtons()\n\n      this.options.styleForm = new L.StyleForm({\n        styleEditorDiv: styleEditorDiv,\n        styleEditorInterior: styleEditorInterior,\n        styleEditorOptions: this.options\n      })\n\n      return controlDiv\n    },\n\n    addDomEvents: function () {\n      L.DomEvent.disableScrollPropagation(this.options.styleEditorDiv)\n      L.DomEvent.disableScrollPropagation(this.options.controlDiv)\n      L.DomEvent.disableScrollPropagation(this.options.cancelUI)\n\n      L.DomEvent.disableClickPropagation(this.options.styleEditorDiv)\n      L.DomEvent.disableClickPropagation(this.options.controlDiv)\n      L.DomEvent.disableClickPropagation(this.options.cancelUI)\n\n      L.DomEvent.on(this.options.controlDiv, 'click', function () {\n        this.toggle()\n      }, this)\n    },\n\n    addEventListeners: function () {\n      this.addLeafletDrawEvents()\n      this.addLeafletEditableEvents()\n    },\n\n    addLeafletDrawEvents: function () {\n      if (!this.options.openOnLeafletDraw || !L.Control.Draw) {\n        return\n      }\n      this.options.map.on('layeradd', this.onLayerAdd, this)\n      this.options.map.on(L.Draw.Event.CREATED, this.onLayerCreated, this)\n    },\n\n    addLeafletEditableEvents: function () {\n      if (!this.options.openOnLeafletEditable || !L.Editable) {\n        return\n      }\n      this.options.map.on('layeradd', this.onLayerAdd, this)\n      this.options.map.on('editable:created', this.onLayerCreated, this)\n    },\n\n    onLayerCreated: function (layer) {\n      this.removeIndicators()\n      this.options.currentElement = layer.layer\n    },\n\n    onLayerAdd: function (e) {\n      if (this.options.currentElement) {\n        if (e.layer === this.options.util.getCurrentElement()) {\n          this.enable(e.layer)\n        }\n      }\n    },\n\n    onRemove: function () {\n      // hide everything that may be visible\n      // remove edit events for layers\n      // remove tooltip\n      this.disable()\n\n      // remove events\n      this.removeDomEvents()\n      this.removeEventListeners()\n\n      // remove dom elements\n      L.DomUtil.remove(this.options.styleEditorDiv)\n      L.DomUtil.remove(this.options.cancelUI)\n\n      // delete dom elements\n      delete this.options.styleEditorDiv\n      delete this.options.cancelUI\n    },\n\n    removeEventListeners: function () {\n      this.options.map.off('layeradd', this.onLayerAdd)\n      if (L.Draw) {\n        this.options.map.off(L.Draw.Event.CREATED, this.onLayerCreated)\n      }\n      if (L.Editable) {\n        this.options.map.off('editable:created', this.onLayerCreated)\n      }\n    },\n\n    removeDomEvents: function () {\n      L.DomEvent.off(this.options.controlDiv, 'click', function () {\n        this.toggle()\n      }, this)\n    },\n\n    addButtons: function () {\n      let nextBtn = L.DomUtil.create('button',\n        'leaflet-styleeditor-button styleeditor-nextBtn', this.options.styleEditorHeader)\n      nextBtn.title = this.options.strings.tooltipNext\n\n      L.DomEvent.on(nextBtn, 'click', function (e) {\n        e.preventDefault() // Prevent form submit\n\n        this.hideEditor()\n\n        if (L.DomUtil.hasClass(this.options.controlUI, 'enabled')) {\n          this.createTooltip()\n        }\n\n        e.stopPropagation()\n      }, this)\n    },\n\n    toggle: function () {\n      if (L.DomUtil.hasClass(this.options.controlUI, 'enabled')) {\n        this.disable()\n      } else {\n        this.enable()\n      }\n    },\n\n    enable: function (layer) {\n      if (this._layerIsIgnored(layer)) {\n        return\n      }\n\n      L.DomUtil.addClass(this.options.controlUI, 'enabled')\n      this.options.map.eachLayer(this.addEditClickEvents, this)\n      this.showCancelButton()\n      this.createTooltip()\n\n      if (layer !== undefined) {\n        if (this.isEnabled()) {\n          this.removeIndicators()\n        }\n        this.initChangeStyle({target: layer})\n      }\n    },\n\n    isEnabled: function () {\n      return L.DomUtil.hasClass(this.options.controlUI, 'enabled')\n    },\n\n    disable: function () {\n      if (this.isEnabled()) {\n        this.options._editLayers.forEach(this.removeEditClickEvents, this)\n        this.options._editLayers = []\n        this.options._layerGroups = []\n        this.hideEditor()\n        this.hideCancelButton()\n        this.removeTooltip()\n        L.DomUtil.removeClass(this.options.controlUI, 'enabled')\n      }\n    },\n\n    addEditClickEvents: function (layer) {\n      if (this._layerIsIgnored(layer)) {\n        return\n      }\n      if (this.options.useGrouping && layer instanceof L.LayerGroup) {\n        this.options._layerGroups.push(layer)\n      } else if (layer instanceof L.Marker || layer instanceof L.Path) {\n        let evt = layer.on('click', this.initChangeStyle, this)\n        this.options._editLayers.push(evt)\n      }\n    },\n\n    removeEditClickEvents: function (layer) {\n      layer.off('click', this.initChangeStyle, this)\n    },\n\n    addIndicators: function () {\n      if (!this.options.currentElement) {\n        return\n      }\n\n      let currentElement = this.options.currentElement.target\n      if (currentElement instanceof L.LayerGroup) {\n        currentElement.eachLayer(function (layer) {\n          if (layer instanceof L.Marker && layer.getElement()) {\n            L.DomUtil.addClass(layer.getElement(), 'leaflet-styleeditor-marker-selected')\n          }\n        })\n      } else if (currentElement instanceof L.Marker) {\n        if (currentElement.getElement()) {\n          L.DomUtil.addClass(currentElement.getElement(), 'leaflet-styleeditor-marker-selected')\n        }\n      }\n    },\n\n    removeIndicators: function () {\n      if (!this.options.currentElement) {\n        return\n      }\n\n      let currentElement = this.options.util.getCurrentElement()\n      if (currentElement instanceof L.LayerGroup) {\n        currentElement.eachLayer(function (layer) {\n          if (layer.getElement()) {\n            L.DomUtil.removeClass(layer.getElement(), 'leaflet-styleeditor-marker-selected')\n          }\n        })\n      } else {\n        if (currentElement.getElement()) {\n          L.DomUtil.removeClass(currentElement.getElement(), 'leaflet-styleeditor-marker-selected')\n        }\n      }\n    },\n\n    hideEditor: function () {\n      if (L.DomUtil.hasClass(this.options.styleEditorDiv, 'editor-enabled')) {\n        this.removeIndicators()\n        L.DomUtil.removeClass(this.options.styleEditorDiv, 'editor-enabled')\n        this.fireEvent('hidden')\n      }\n    },\n\n    hideCancelButton: function () {\n      L.DomUtil.addClass(this.options.cancelUI, 'leaflet-styleeditor-hidden')\n    },\n\n    showEditor: function () {\n      let editorDiv = this.options.styleEditorDiv\n      if (!L.DomUtil.hasClass(editorDiv, 'editor-enabled')) {\n        L.DomUtil.addClass(editorDiv, 'editor-enabled')\n        this.fireEvent('visible')\n      }\n    },\n\n    showCancelButton: function () {\n      L.DomUtil.removeClass(this.options.cancelUI, 'leaflet-styleeditor-hidden')\n    },\n\n    initChangeStyle: function (e) {\n      this.removeIndicators()\n      this.options.currentElement = (this.options.useGrouping) ? this.getMatchingElement(e) : e\n\n      this.addIndicators()\n      this.showEditor()\n      this.removeTooltip()\n\n      let layer = e\n      if (!(layer instanceof L.Layer)) {\n        layer = e.target\n      }\n\n      this.fireEvent('editing', layer)\n      if (layer instanceof L.Marker) {\n        // ensure iconOptions are set for Leaflet.Draw created Markers\n        this.options.markerType.resetIconOptions()\n        // marker\n        this.showMarkerForm(layer)\n      } else {\n        // layer with of type L.GeoJSON or L.Path (polyline, polygon, ...)\n        this.showGeometryForm(layer)\n      }\n    },\n\n    showGeometryForm: function (layer) {\n      this.fireEvent('geometry', layer)\n      this.options.styleForm.showGeometryForm()\n    },\n\n    showMarkerForm: function (layer) {\n      this.fireEvent('marker', layer)\n      this.options.styleForm.showMarkerForm()\n    },\n\n    createTooltip: function () {\n      if (!this.options.showTooltip) {\n        return\n      }\n\n      if (!this.options.tooltipWrapper) {\n        this.options.tooltipWrapper =\n          L.DomUtil.create('div', 'leaflet-styleeditor-tooltip-wrapper', this.options.map.getContainer())\n      }\n\n      if (!this.options.tooltip) {\n        this.options.tooltip = L.DomUtil.create('div', 'leaflet-styleeditor-tooltip', this.options.tooltipWrapper)\n      }\n      this.options.tooltip.innerHTML = this.options.strings.tooltip\n    },\n\n    getMatchingElement: function (e) {\n      let group = null\n      let layer = e.target\n\n      for (let i = 0; i < this.options._layerGroups.length; ++i) {\n        group = this.options._layerGroups[i]\n        if (group && layer !== group && group.hasLayer(layer)) {\n          // we use the opacity style to check for correct object\n          if (!group.options || !group.options.opacity) {\n            group.options = layer.options\n\n            // special handling for layers... we pass the setIcon function\n            if (layer.setIcon) {\n              group.setIcon = function (icon) {\n                group.eachLayer(function (layer) {\n                  if (layer instanceof L.Marker) {\n                    layer.setIcon(icon)\n                  }\n                })\n              }\n            }\n          }\n\n          return this.getMatchingElement({\n            target: group\n          })\n        }\n      }\n      return e\n    },\n\n    removeTooltip: function () {\n      if (this.options.tooltip && this.options.tooltip.parentNode) {\n        this.options.tooltip.remove()\n        this.options.tooltip = undefined\n      }\n    },\n\n    _layerIsIgnored: function (layer) {\n      if (layer === undefined) {\n        return false\n      }\n      return this.options.ignoreLayerTypes.some(\n        layerType => layer.styleEditor && layer.styleEditor.type.toUpperCase() === layerType.toUpperCase()\n      )\n    }\n  })\n\n  L.control.styleEditor = function (options) {\n    if (!options) {\n      options = {}\n    }\n    return new L.Control.StyleEditor(options)\n  }\n}\n"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","r","Symbol","toStringTag","Object","defineProperty","value","L","StyleEditor","marker","forms","formElements","Marker","include","styleEditor","type","Polygon","Polyline","Rectangle","Util","Class","extend","initialize","options","setOptions","this","fireEvent","eventName","element","styleEditorOptions","map","styleEditorEventPrefix","fireChangeEvent","hideElement","DomUtil","addClass","rgbToHex","rgb","noHash","defaultColor","indexOf","replace","rgbArray","substring","split","withoutHash","_componentToHex","parseInt","getCurrentElement","currentElement","target","setCurrentElement","fillCurrentElement","fill","getStyle","option","setStyle","markerType","newStyle","showElement","removeClass","color","hex","toString","length","getMarkersForColor","markers","controlMarkers","Array","isArray","keys","includes","filter","n","getDefaultMarkerForColor","defMarkers","defaultMarker","defaultMarkerIcon","push","FormElement","title","styleOption","charAt","toUpperCase","slice","create","parentUiElement","uiElement","createTitle","createContent","innerHTML","show","style","showForm","util","hide","lostFocus","layers","LayerGroup","values","_layers","i","layer","parentForm","ColorElement","colorPickerDiv","_getColorRamp","forEach","_setSelectCallback","colorRamp","MarkerForm","elem","backgroundColor","DomEvent","addListener","_selectColor","e","stopPropagation","setNewMarker","DashElement","stroke","backgroundPosition","IconElement","_selectOptionWrapperClasses","_selectOptionClasses","selectBox","selectBoxImage","_createSelectInputImage","_toggleSelectInput","iconOptions","getIconOptions","_styleSelectInputImage","icon","iconColor","_createColorSelect","_hideSelectOptions","wrapper","image","getAttribute","createSelectHTML","setAttribute","selectOptions","selectOptionWrapper","selectOption","selectImage","nodeName","parentNode","className","childNodes","_selectMarker","currentColorElement","_getCurrentColorElement","hasClass","_getValue","OpacityElement","label","slider","max","min","step","_setStyle","innerText","PopupContentElement","textArea","descTextAreaField","selectedElement","popupContent","inputText","getPopup","bindPopup","popup1","setContent","SizeElement","select","size","small","medium","large","WeightElement","weight","Form","initializedElements","getFormElements","styleFormKeys","formElement","getFormElementClass","hideFormElements","hideForm","preShow","showFormElements","showFormElement","showFormElementForStyleOption","formOptionKey","getFormElementStandardClass","formElementInstance","styleFormElement","err","GeometryForm","markerForm","selectIconSize","selectIconClass","startsWith","newIcon","_createMarkerIcon","setIcon","eachLayer","getElement","setIconOptions","_getDefaultMarkerColor","iconSize","_ensureMarkerIcon","resetIconOptions","key","createMarkerIcon","markerTypeColorRamp","generalColorRamp","intersectedColorRamp","defaultMarkerColor","sizeToName","JSON","stringify","sizeToPixel","DefaultMarker","iconClass","Icon","iconUrl","_getMarkerUrlForStyle","iconAnchor","popupAnchor","tmpOptions","createIcon","outerHTML","_getMarkerUrl","url","GlyphiconMarker","getMarkerHtml","divIcon","html","StyleForm","createMarkerForm","createGeometryForm","addDOMEvents","styleEditorDiv","clearForm","geometryForm","markerDiv","styleEditorInterior","showMarkerForm","showGeometryForm","fireChangedEvent","parent","Control","position","ignoreLayerTypes","openOnLeafletDraw","openOnLeafletEditable","showTooltip","strings","cancel","cancelTitle","tooltip","tooltipNext","useGrouping","_editLayers","_layerGroups","getDefaultIcon","bind","onAdd","createUi","controlDiv","controlUI","cancelUI","_container","styleEditorHeader","addDomEvents","addEventListeners","addButtons","styleForm","disableScrollPropagation","disableClickPropagation","on","toggle","addLeafletDrawEvents","addLeafletEditableEvents","Draw","onLayerAdd","Event","CREATED","onLayerCreated","Editable","removeIndicators","enable","onRemove","disable","removeDomEvents","removeEventListeners","remove","off","nextBtn","preventDefault","hideEditor","createTooltip","_layerIsIgnored","addEditClickEvents","showCancelButton","isEnabled","initChangeStyle","removeEditClickEvents","hideCancelButton","removeTooltip","Path","evt","addIndicators","showEditor","editorDiv","getMatchingElement","Layer","tooltipWrapper","getContainer","group","hasLayer","opacity","some","layerType","control"],"sourceRoot":""}