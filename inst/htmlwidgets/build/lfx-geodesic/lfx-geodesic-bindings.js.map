{"version":3,"file":"lfx-geodesic-bindings.js","mappings":"AACAA,cAAcC,QAAQC,qBAAwB,SAC5CC,EAAUC,EAASC,EAAOC,EAASC,EAAOC,EAC1CC,EAAOC,EAAcC,GACrB,GAAGR,EAASS,OAAS,EAAG,CACtB,IAAIC,GAAK,IAAIb,cAAcc,WACxBC,IAAI,SAAUZ,GACdY,IAAI,UAAWX,GACfW,IAAI,QAASV,GACbU,IAAI,QAASR,GACbQ,IAAI,eAAgBP,GACpBO,IAAI,QAASN,GACbM,IAAI,eAAgBL,GACpBK,IAAI,mBAAoBJ,GACxBK,MAAMV,GAETN,cAAcC,QAAQgB,iBAAiBC,KAAM,QAASL,GACpD,SAASA,EAAIM,GAGX,IAFA,IAAIC,EAASP,EAAGQ,IAAIF,EAAG,UACnBG,EAAa,GACRC,EAAI,EAAGA,EAAIH,EAAOR,OAAQW,IACjC,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAOG,GAAGX,OAAQY,IACpCF,EAAWG,KACTC,YAAYC,cAAcP,EAAOG,GAAGC,KAI1C,OAAOI,EAAEC,SAASP,EAAYT,EAAGQ,IAAIF,GACvC,GACJ,CACF,EAGAnB,cAAcC,QAAQ6B,gBAAmB,SACvCC,EAAKC,EAAKC,EAAQ7B,EAASC,EAAOC,EAASC,EAAOC,EAClDC,EAAOC,EAAcC,GACrB,IAAKuB,EAAEC,cAAcJ,KAAQG,EAAEC,cAAcH,IACxCE,EAAEE,UAAUL,IAAQG,EAAEE,UAAUJ,GAAO,CAC1C,IAAInB,GAAK,IAAIb,cAAcc,WACxBC,IAAI,MAAOgB,GACXhB,IAAI,MAAOiB,GACXjB,IAAI,SAAUkB,GACdlB,IAAI,UAAWX,GACfW,IAAI,QAASV,GACbU,IAAI,QAASR,GACbQ,IAAI,eAAgBP,GACpBO,IAAI,QAASN,GACbM,IAAI,eAAgBL,GACpBK,IAAI,mBAAoBJ,GACxBK,MAAMV,GAEL+B,EAAMnB,KAEVlB,cAAcC,QAAQgB,iBAAiBC,KAAM,QAASL,GACpD,SAASA,EAAIM,GACX,IAAIb,EAAUO,EAAGQ,IAAIF,GACjBmB,EAAWV,EAAEC,SAAS,GAAIvB,GAC1BiC,EAASX,EAAEY,OAAO,CAAC3B,EAAGQ,IAAIF,EAAG,OAAQN,EAAGQ,IAAIF,EAAG,SAenD,OAbAkB,EAAII,GAAG,YAAY,SAASC,GACvBA,EAAEC,QAAUL,GACbC,EAAOK,MAAMP,EAEjB,IAEAA,EAAII,GAAG,eAAe,SAASC,GAC1BA,EAAEC,QAAUL,GACbD,EAAIQ,YAAYN,EAEpB,IAEAD,EAASQ,aAAa,CAACjC,EAAGQ,IAAIF,EAAG,OAAQN,EAAGQ,IAAIF,EAAG,QAASN,EAAGQ,IAAIF,EAAG,WAC/DmB,CACT,GACJ,CACF","sources":["webpack://leaflet.extras/./inst/htmlwidgets/bindings/lfx-geodesic-bindings.js"],"sourcesContent":["/* global $, LeafletWidget, L, HTMLWidgets */\r\nLeafletWidget.methods.addGeodesicPolylines  = function(\r\n  polygons, layerId, group, options, popup, popupOptions,\r\n  label, labelOptions, highlightOptions) {\r\n  if(polygons.length > 0) {\r\n    var df = new LeafletWidget.DataFrame()\r\n      .col('shapes', polygons)\r\n      .col('layerId', layerId)\r\n      .col('group', group)\r\n      .col('popup', popup)\r\n      .col('popupOptions', popupOptions)\r\n      .col('label', label)\r\n      .col('labelOptions', labelOptions)\r\n      .col('highlightOptions', highlightOptions)\r\n      .cbind(options);\r\n\r\n    LeafletWidget.methods.addGenericLayers(this, 'shape', df,\r\n      function(df, i) {\r\n        var shapes = df.get(i, 'shapes');\r\n        var ret_shapes = [];\r\n        for (var j = 0; j < shapes.length; j++) {\r\n          for (var k = 0; k < shapes[j].length; k++) {\r\n            ret_shapes.push(\r\n              HTMLWidgets.dataframeToD3(shapes[j][k])\r\n            );\r\n          }\r\n        }\r\n        return L.geodesic(ret_shapes, df.get(i));\r\n      });\r\n  }\r\n};\r\n\r\n\r\nLeafletWidget.methods.addGreatCircles  = function(\r\n  lat, lng, radius, layerId, group, options, popup, popupOptions,\r\n  label, labelOptions, highlightOptions) {\r\n  if(!($.isEmptyObject(lat) || $.isEmptyObject(lng)) ||\r\n      ($.isNumeric(lat) && $.isNumeric(lng))) {\r\n    var df = new LeafletWidget.DataFrame()\r\n      .col('lat', lat)\r\n      .col('lng', lng)\r\n      .col('radius', radius)\r\n      .col('layerId', layerId)\r\n      .col('group', group)\r\n      .col('popup', popup)\r\n      .col('popupOptions', popupOptions)\r\n      .col('label', label)\r\n      .col('labelOptions', labelOptions)\r\n      .col('highlightOptions', highlightOptions)\r\n      .cbind(options);\r\n\r\n    var map = this;\r\n\r\n    LeafletWidget.methods.addGenericLayers(this, 'shape', df,\r\n      function(df, i) {\r\n        var options = df.get(i);\r\n        var Geodesic = L.geodesic([], options);\r\n        var center = L.marker([df.get(i, 'lat'), df.get(i, 'lng')]);\r\n\r\n        map.on('layeradd', function(e) {\r\n          if(e.layer === Geodesic) {\r\n            center.addTo(map);\r\n          }\r\n        });\r\n\r\n        map.on('layerremove', function(e) {\r\n          if(e.layer === Geodesic) {\r\n            map.removeLayer(center);\r\n          }\r\n        });\r\n\r\n        Geodesic.createCircle([df.get(i, 'lat'), df.get(i, 'lng')], df.get(i, 'radius'));\r\n        return Geodesic;\r\n      });\r\n  }\r\n};\r\n"],"names":["LeafletWidget","methods","addGeodesicPolylines","polygons","layerId","group","options","popup","popupOptions","label","labelOptions","highlightOptions","length","df","DataFrame","col","cbind","addGenericLayers","this","i","shapes","get","ret_shapes","j","k","push","HTMLWidgets","dataframeToD3","L","geodesic","addGreatCircles","lat","lng","radius","$","isEmptyObject","isNumeric","map","Geodesic","center","marker","on","e","layer","addTo","removeLayer","createCircle"],"sourceRoot":""}